#!/bin/bash

# TODO: Port this to ansible
# https://www.vagrantup.com/docs/provisioning/ansible_intro
# https://www.vagrantup.com/docs/provisioning/ansible
# https://www.vagrantup.com/docs/provisioning/ansible_local
# https://www.vagrantup.com/docs/provisioning/ansible_common

TARGET_USER=vagrant

################################################################################
# Set hostname (this should be already set from vagrant deploy/provision

echo "	Setting hostname"

hostnamectl set-hostname k8s.local

################################################################################
# Disable AppArmor to avoid roadblocks

echo "	Disabling AppArmor"

systemctl disable apparmor

################################################################################
# Set verbose flags for the kernel
# TODO: Create a _sedfile_ to substitute everything in one shot
# We can also just deploy a pre-baked /etc/default/grub file

echo "	Configuring grub"

sed -ie 's|^\(GRUB_CMDLINE_LINUX_DEFAULT\)=.*$|\1="verbose init=/sbin/init --verbose"|g' /etc/default/grub
sed -ie 's|^\(GRUB_CMDLINE_LINUX\)=.*$|\1="earlyprintk=vga,keep consoleblank=0 panic=1 net.ifnames=0"|g' /etc/default/grub
egrep 'GRUB_CMDLINE_LINUX(_DEFAULT)?' /etc/default/grub
update-grub

################################################################################
# Configure default privileges for ${TARGET_USER}

echo "	Configuring \${TARGET_USER}"
usermod -aG users,sudo,adm,staff,operator ${TARGET_USER}

################################################################################
# Configure network interfaces with netplan
# Another option is to disable netplan entirely and fall back to the
# good old /etc/network/interfaces and /etc/network/interfaces.d/*

echo "	Configuring netplan"

# Rename enp0s3 to eth0 in netplan config
# The default network interface for vagrant is NAT in VirtualBox

sed -ie 's/enp0s3/eth0/g' /etc/netplan/50-cloud-init.yaml

# Set netplan configuration for the network interfaces
# Linux name*	VirtualBox type	Vagrantfile if type
# eth0		NAT		(default)
# eth1		host-only	private_network
# eth2		bridge		public_network

# The name is set as eth* because of the net.ifnames=0 kernel parameter that
# was configured early, the changes take effect on the next reboot

# That's why the provision entry that calls this script in the Vagrantfile
# has a 'reboot: true' parameter

# The metric for the NAT interface is 100 (the default value), so we set a
# lower metric value to make the host-only and bridge interfaces to have
# more priority

cat > /etc/netplan/99-vagrant.yaml << EOF
# Generated by Vagrant custom provisioning script
network:
    version: 2
    renderer: networkd
    ethernets:
EOF
for IFACE in eth1 eth2
do
  cat >> /etc/netplan/99-vagrant.yaml << EOF
        ${IFACE}:
            dhcp4: true
            dhcp4-overrides:
                route-metric: 50
EOF
done
